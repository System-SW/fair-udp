/* -*- Mode:C++; c-file-style:"gnu"; indent-tabs-mode:nil; -*- */
/*
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation;
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 */

#include "ns3/core-module.h"
#include "ns3/network-module.h"
#include "ns3/applications-module.h"
#include "ns3/internet-module.h"
#include "ns3/csma-module.h"
#include "udp_app.hh"

using namespace ns3;

int
main(int argc, char *argv[])
{
  CommandLine cmd(__FILE__);
  cmd.Parse(argc, argv);

  NodeContainer nodes(2);

  CsmaHelper csma;
  csma.SetChannelAttribute("DataRate", StringValue("1Gbps"));
  csma.SetChannelAttribute("Delay", TimeValue(NanoSeconds(6560)));

  auto csma_devs = csma.Install(nodes);

  InternetStackHelper stack;
  stack.Install(nodes);

  Ipv4AddressHelper address;
  address.SetBase("10.1.1.0", "255.255.255.0");
  auto iface = address.Assign(csma_devs);

  Ipv4GlobalRoutingHelper::PopulateRoutingTables();
  Packet::EnablePrinting();

  auto udp1 = CreateObject<simple_udp_app>();
  auto udp2 = CreateObject<simple_udp_app>();

  udp1->SetStartTime(Seconds(0));
  udp1->SetStopTime(Seconds(10));
  udp2->SetStartTime(Seconds(0));
  udp2->SetStopTime(Seconds(10));

  nodes.Get(0)->AddApplication(udp1);
  nodes.Get(1)->AddApplication(udp2);

  Ipv4Address dest_ip("10.1.1.2");

  auto packet1 = Create<Packet>(400);
  Simulator::Schedule(Seconds(1), &simple_udp_app::send_msg, udp1, packet1, dest_ip,
                      7777);
  Simulator::Schedule(Seconds(1), &simple_udp_app::send_msg, udp2, packet1, dest_ip,
                      7777);

  LogComponentEnable("simple_udp_app", LOG_LEVEL_INFO);

  Simulator::Stop(Seconds(10));
  Simulator::Run();
  Simulator::Destroy();
  
  return 0;
}
